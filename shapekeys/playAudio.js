var soundsReady = 0;
var theVolume = 0.25;
var played = 0;
var soundArray;
var isPlaying;
var num = .01;
var num2 = .5
var id;
var index = 0;

var activities = [
[0.0, 0.0, 0.0],
[0.0804, 0.0385, 0.0461],
[0.303, 0.1519, 0.1813],
[0.5683, 0.3236, 0.3858],
[0.76, 0.5179, 0.6167],
[0.8881, 0.6891, 0.8203],
[0.9749, 0.8018, 0.9544],
[1.0, 0.84, 1.0],
[0.942, 0.6369, 0.7589],
[0.818, 0.2036, 0.2443],
[0.76, 0.0, 0.0],
[0.7668, 0.0155, 0.0],
[0.7875, 0.0621, 0.0],
[0.8205, 0.1383, 0.0014],
[0.8609, 0.2396, 0.0135],
[0.9013, 0.3578, 0.0508],
[0.9355, 0.4822, 0.1228],
[0.96, 0.6004, 0.2267],
[0.9779, 0.7017, 0.4092],
[0.9913, 0.7779, 0.6821],
[0.9982, 0.8245, 0.9158],
[1.0, 0.84, 1.0],
[0.942, 0.6362, 0.7594],
[0.818, 0.2027, 0.2445],
[0.76, 0.0, 0.0],
[0.7813, 0.0748, 0.0],
[0.8414, 0.2853, 0.0],
[0.9186, 0.5552, 0.0],
[0.9787, 0.7654, 0.4771],
[1.0, 0.84, 0.9467],
[0.9787, 0.7654, 0.8614],
[0.9186, 0.5552, 0.6234],
[0.8414, 0.2853, 0.3201],
[0.7813, 0.0748, 0.0841],
[0.76, 0.0, 0.0],
[0.818, 0.2032, 0.229],
[0.942, 0.6371, 0.718],
[1.0, 0.84, 0.9467],
[0.9668, 0.724, 0.8158],
[0.88, 0.421, 0.4739],
[0.7932, 0.1169, 0.1314],
[0.76, 0.0, 0.0],
[0.8083, 0.0, 0.0549],
[0.9117, 0.0, 0.172],
[0.96, 0.0, 0.2267],
[0.9267, 0.0, 0.2188],
[0.8273, 0.0, 0.1953],
[0.6709, 0.0, 0.1583],
[0.4803, 0.0, 0.1133],
[0.2897, 0.0, 0.0683],
[0.133, 0.0, 0.0313],
[0.0334, 0.0, 0.0079],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0895, 0.0463, 0.0],
[0.3403, 0.1765, 0.0369],
[0.6611, 0.3436, 0.1334],
[0.911, 0.4738, 0.2298],
[1.0, 0.52, 0.2667],
[0.9419, 0.3943, 0.2022],
[0.8179, 0.1256, 0.0644],
[0.76, 0.0, 0.0],
[0.818, 0.1256, 0.0644],
[0.942, 0.3944, 0.2022],
[1.0, 0.52, 0.2667],
[0.9687, 0.4481, 0.2298],
[0.8867, 0.26, 0.1333],
[0.8047, 0.0719, 0.0369],
[0.7733, 0.0, 0.0],
[0.8281, 0.1256, 0.0644],
[0.9452, 0.3943, 0.2022],
[1.0, 0.52, 0.2667],
[0.9715, 0.2675, 0.1342],
[0.76, 0.0, 0.0],
[0.1863, 1.0, 0.4667],
[0.2934, 0.7464, 0.3526],
[0.5512, 0.2367, 0.1122],
[0.7597, 0.0, 0.0],
[0.8881, 0.126, 0.0644],
[0.9749, 0.3946, 0.2023],
[1.0, 0.52, 0.2667],
[0.9673, 0.3952, 0.2023],
[0.8717, 0.1274, 0.0645],
[0.76, 0.0, 0.0],
[0.6339, 0.0, 0.0],
[0.4693, 0.0, 0.0],
[0.2901, 0.0, 0.0],
[0.1341, 0.0, 0.0],
[0.0333, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0]
];

function createAudio(){

theTobe = new BABYLON.Sound("tobe", "tobe151.mp3", myScene, soundReady, { loop: false, autoplay: false, volume: theVolume  });

function soundReady() {
        soundsReady++;
		if(soundsReady > 0){
			
			console.log(speed);
		
			//createAudio2();
		
			//aButton.setEnabled(true);
			//aButton.isPickable = true;
			//console.log(soundsReady);
			
			//var thePub = myScene.getMeshByName("Trigger02");	
			//theMusic.setPosition(new BABYLON.Vector3(56, 0, 48));
			//theMusic2.setPosition(new BABYLON.Vector3(6, 0, -9));
			//console.log(theMusic.getPosition);
			//theMusic.attachToMesh(thePub);
			//theMusic.maxDistance = 10;
			
			//theTobe.play();
			
			//var counter = 0;
			//var interval=setInterval(if(counter<100){console.log(counter);counter++;}else{clearInterval(interval);}, 35);
			
			//aHead.morphTargetManager.getTarget(0).influence = activities[2][0];
			//for (i=0; i < activities.length; i++){
			//createMotion();
			//var frames = activities;
			/*
			console.log(activities[i][0]);
			console.log(activities[i][1]);
			console.log(activities[i][2]);
			aHead.morphTargetManager.getTarget(0).influence = activities[i][0];
			aHead.morphTargetManager.getTarget(1).influence = activities[i][1];
			aHead.morphTargetManager.getTarget(2).influence = activities[i][2];
			};
			*/
			//console.log("count ended");
			//count();
			//createMotion();
			//for(i = 0; i < 1000000; i++){
				//createMotion(.001);
				//aHead.morphTargetManager.getTarget(1).influence = i/2400;
				//console.log(aHead.morphTargetManager.getTarget(1).influence);
			//};	
			//console.log(aHead.morphTargetManager.getTarget(1).influence);
			//theMusic2.play();
			//theStart.play();
			//theSounds.play(1,14.0,9.2);
			//theSounds.play(0, soundArray[0][0], soundArray[0][1]);
			//console.log(soundArray[0][0] + "  " + soundArray[0][1]);
			//console.log("sounds ready = " + soundsReady);
		};
		
		theTobe.onended = function(){
			console.log("ended");
				//for (i=0; i < 1000000; i++){
					//stopMotion();
				//};
			};//theSounds ended
};
};

function createMotion(){
	
	if(index === (activities.length -1)){
		clearTimeout(id);
		return;
	}
	else{
	//console.log(index);
		aHead.morphTargetManager.getTarget(0).influence = activities[index][0];
		aHead.morphTargetManager.getTarget(1).influence = activities[index][1];
		aHead.morphTargetManager.getTarget(2).influence = activities[index][2];
		++index;
		id = setTimeout(createMotion, speed);
	}
 };
 
 
 
 
 
 //};
 /*
 function stopMotion(){
	clearTimeout(id);
	aHead.morphTargetManager.getTarget(1).influence = 0.001;
	aHead.morphTargetManager.getTarget(0).influence = 0.001;
 };
 
 function frame() {
	aHead.morphTargetManager.getTarget(1).influence = num;
	num = num + 0.05;
	if(num > .25){
		//clearInterval(id);
		aHead.morphTargetManager.getTarget(1).influence = .001;
	}

};
*/





// if you want the loop to continue, comment out return and uncomment index = 0;


/*
function activities(arr) {
    var iterator = function (index) {
        if (index === (arr.length -1)) {
            //index = 0;
            return;
        }
        console.log(index + "   " + arr[index]);
        setTimeout(function () {
            iterator(++index);
			aHead.morphTargetManager.getTarget(0).influence = arr[index][0];
			aHead.morphTargetManager.getTarget(1).influence = arr[index][1];
			aHead.morphTargetManager.getTarget(2).influence = arr[index][2];
        }, 27.5);
    };

    iterator(0);
}

activities([
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0804, 0.0385, 0.0461],
[0.303, 0.1519, 0.1813],
[0.5683, 0.3236, 0.3858],
[0.76, 0.5179, 0.6167],
[0.8881, 0.6891, 0.8203],
[0.9749, 0.8018, 0.9544],
[1.0, 0.84, 1.0],
[0.942, 0.6369, 0.7589],
[0.818, 0.2036, 0.2443],
[0.76, 0.0, 0.0],
[0.7668, 0.0155, 0.0],
[0.7875, 0.0621, 0.0],
[0.8205, 0.1383, 0.0014],
[0.8609, 0.2396, 0.0135],
[0.9013, 0.3578, 0.0508],
[0.9355, 0.4822, 0.1228],
[0.96, 0.6004, 0.2267],
[0.9779, 0.7017, 0.4092],
[0.9913, 0.7779, 0.6821],
[0.9982, 0.8245, 0.9158],
[1.0, 0.84, 1.0],
[0.942, 0.6362, 0.7594],
[0.818, 0.2027, 0.2445],
[0.76, 0.0, 0.0],
[0.7813, 0.0748, 0.0],
[0.8414, 0.2853, 0.0],
[0.9186, 0.5552, 0.0],
[0.9787, 0.7654, 0.4771],
[1.0, 0.84, 0.9467],
[0.9787, 0.7654, 0.8614],
[0.9186, 0.5552, 0.6234],
[0.8414, 0.2853, 0.3201],
[0.7813, 0.0748, 0.0841],
[0.76, 0.0, 0.0],
[0.818, 0.2032, 0.229],
[0.942, 0.6371, 0.718],
[1.0, 0.84, 0.9467],
[0.9668, 0.724, 0.8158],
[0.88, 0.421, 0.4739],
[0.7932, 0.1169, 0.1314],
[0.76, 0.0, 0.0],
[0.8083, 0.0, 0.0549],
[0.9117, 0.0, 0.172],
[0.96, 0.0, 0.2267],
[0.9267, 0.0, 0.2188],
[0.8273, 0.0, 0.1953],
[0.6709, 0.0, 0.1583],
[0.4803, 0.0, 0.1133],
[0.2897, 0.0, 0.0683],
[0.133, 0.0, 0.0313],
[0.0334, 0.0, 0.0079],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0895, 0.0463, 0.0],
[0.3403, 0.1765, 0.0369],
[0.6611, 0.3436, 0.1334],
[0.911, 0.4738, 0.2298],
[1.0, 0.52, 0.2667],
[0.9419, 0.3943, 0.2022],
[0.8179, 0.1256, 0.0644],
[0.76, 0.0, 0.0],
[0.818, 0.1256, 0.0644],
[0.942, 0.3944, 0.2022],
[1.0, 0.52, 0.2667],
[0.9687, 0.4481, 0.2298],
[0.8867, 0.26, 0.1333],
[0.8047, 0.0719, 0.0369],
[0.7733, 0.0, 0.0],
[0.8281, 0.1256, 0.0644],
[0.9452, 0.3943, 0.2022],
[1.0, 0.52, 0.2667],
[0.9715, 0.2675, 0.1342],
[0.76, 0.0, 0.0],
[0.1863, 1.0, 0.4667],
[0.2934, 0.7464, 0.3526],
[0.5512, 0.2367, 0.1122],
[0.7597, 0.0, 0.0],
[0.8881, 0.126, 0.0644],
[0.9749, 0.3946, 0.2023],
[1.0, 0.52, 0.2667],
[0.9673, 0.3952, 0.2023],
[0.8717, 0.1274, 0.0645],
[0.76, 0.0, 0.0],
[0.6339, 0.0, 0.0],
[0.4693, 0.0, 0.0],
[0.2901, 0.0, 0.0],
[0.1341, 0.0, 0.0],
[0.0333, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0],
[0.0, 0.0, 0.0]
]);

*/

/* 

var counter = 0;
var interval=setInterval('if(counter<100){document.write("hello");counter++;}else{clearInterval(interval);}', 1000);

*/

